Сериализация в JSON — это преобразование данных из формата Go в JSON

С помощью тегов JSON в Go можно указывать имя поля в JSON-данных. Например, если мы укажем тег для поля Name как "name", то при сериализации в JSON название поля будет записано так же, со строчной буквы

//Чтение JSON в Go
//Для чтения JSON в Go нужна функция Unmarshal() из пакета encoding/json

type Person struct {
  Name string `json:"name"` // `json:"name"` — тег поля. Без него в JSON будет ключ "Name" вместо "name".
  Age int `json:"age"`
	Gender string `json:"-"` // Поле с тегом `json:"-"` при кодировании json игнорируется
	privateNotes string // Неэкспортируемые поля так же игнорируются
}

func main() {
	jsonStr := `{"name": "John", "age": 30, "Gender": "male"}`
	var person Person
	err := json.Unmarshal([]byte(jsonStr), &person)
	if err != nil {
			panic(err)
	}
	fmt.Println(person)
}

//мы создали структуру Person с полями Name и Age, а затем определили строку jsonStr, которая содержит данные в JSON. Мы распаковали данные из строки JSON с помощью Unmarshal() и записали их в переменную person.